<?php

/**
 * @package CRM
 * @copyright CiviCRM LLC https://civicrm.org/licensing
 *
 * Generated from uk.co.compucorp.membershipextrasimporterapi/xml/schema/CRM/Membershipextrasimporterapi/MembershipextrasImporter.xml
 * DO NOT EDIT.  Generated by CRM_Core_CodeGen
 * (GenCodeChecksum:d14b84aceb60f5d7640e1edc95308701)
 */
use CRM_Membershipextrasimporterapi_ExtensionUtil as E;

/**
 * Database access object for the MembershipextrasImporter entity.
 */
class CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter extends CRM_Core_DAO {
  const EXT = E::LONG_NAME;
  const TABLE_ADDED = '';

  /**
   * Static instance to hold the table name.
   *
   * @var string
   */
  public static $_tableName = 'membershipextrasimporter_fake_entity';

  /**
   * Should CiviCRM log any modifications to this table in the civicrm_log table.
   *
   * @var bool
   */
  public static $_log = FALSE;

  /**
   * Unique Inlay ID
   *
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $id;

  /**
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $contact_id;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $contact_external_id;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_external_id;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_payment_processor;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_currency;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_frequency;

  /**
   * @var string
   *   (SQL type: date)
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_next_contribution_date;

  /**
   * @var string|null
   *   (SQL type: date)
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_start_date;

  /**
   * @var string|null
   *   (SQL type: date)
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_create_date;

  /**
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_cycle_day;

  /**
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_auto_renew;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_financial_type;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_status;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_payment_method;

  /**
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $payment_plan_is_active;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $membership_external_id;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $membership_type;

  /**
   * @var string|null
   *   (SQL type: date)
   *   Note that values will be retrieved from the database as a string.
   */
  public $membership_join_date;

  /**
   * @var string|null
   *   (SQL type: date)
   *   Note that values will be retrieved from the database as a string.
   */
  public $membership_start_date;

  /**
   * @var string|null
   *   (SQL type: date)
   *   Note that values will be retrieved from the database as a string.
   */
  public $membership_end_date;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $membership_status;

  /**
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $membership_is_status_overridden;

  /**
   * @var string|null
   *   (SQL type: date)
   *   Note that values will be retrieved from the database as a string.
   */
  public $membership_status_override_end_date;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $contribution_external_id;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $contribution_financial_type;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $contribution_currency;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $contribution_payment_method;

  /**
   * @var string|null
   *   (SQL type: date)
   *   Note that values will be retrieved from the database as a string.
   */
  public $contribution_received_date;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $contribution_status;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $contribution_invoice_number;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $line_item_entity_table;

  /**
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $line_item_entity_id;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $line_item_label;

  /**
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $line_item_quantity;

  /**
   * @var float|string
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $line_item_unit_price;

  /**
   * @var string
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $line_item_financial_type;

  /**
   * @var float|string|null
   *   (SQL type: decimal(20,2))
   *   Note that values will be retrieved from the database as a string.
   */
  public $line_item_tax_amount;

  /**
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $line_item_auto_renew;

  /**
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $line_item_price_field_id;

  /**
   * @var int|string|null
   *   (SQL type: int unsigned)
   *   Note that values will be retrieved from the database as a string.
   */
  public $line_item_price_field_value_id;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $direct_debit_mandate_reference;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $direct_debit_mandate_bank_name;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $direct_debit_mandate_account_holder;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $direct_debit_mandate_account_number;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $direct_debit_mandate_sort_code;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $direct_debit_mandate_code;

  /**
   * @var string|null
   *   (SQL type: date)
   *   Note that values will be retrieved from the database as a string.
   */
  public $direct_debit_mandate_start_date;

  /**
   * @var string|null
   *   (SQL type: varchar(255))
   *   Note that values will be retrieved from the database as a string.
   */
  public $direct_debit_mandate_originator_number;

  /**
   * Class constructor.
   */
  public function __construct() {
    $this->__table = 'membershipextrasimporter_fake_entity';
    parent::__construct();
  }

  /**
   * Returns localized title of this entity.
   *
   * @param bool $plural
   *   Whether to return the plural version of the title.
   */
  public static function getEntityTitle($plural = FALSE) {
    return $plural ? E::ts('Membershipextras Importers') : E::ts('Membershipextras Importer');
  }

  /**
   * Returns all the column names of this table
   *
   * @return array
   */
  public static function &fields() {
    if (!isset(Civi::$statics[__CLASS__]['fields'])) {
      Civi::$statics[__CLASS__]['fields'] = [
        'id' => [
          'name' => 'id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Id'),
          'description' => E::ts('Unique Inlay ID'),
          'required' => TRUE,
          'where' => 'membershipextrasimporter_fake_entity.id',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Id"),
          ],
          'readonly' => TRUE,
          'add' => NULL,
        ],
        'contact_id' => [
          'name' => 'contact_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Contact Id'),
          'where' => 'membershipextrasimporter_fake_entity.contact_id',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Contact Id"),
          ],
          'add' => NULL,
        ],
        'contact_external_id' => [
          'name' => 'contact_external_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Contact External Id'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.contact_external_id',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Contact External Id"),
          ],
          'add' => NULL,
        ],
        'payment_plan_external_id' => [
          'name' => 'payment_plan_external_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Payment Plan External Id'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_external_id',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan External Id"),
          ],
          'add' => NULL,
        ],
        'payment_plan_payment_processor' => [
          'name' => 'payment_plan_payment_processor',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Payment Plan Payment Processor'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_payment_processor',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Payment Processor"),
          ],
          'add' => NULL,
        ],
        'payment_plan_currency' => [
          'name' => 'payment_plan_currency',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Payment Plan Currency'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_currency',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Currency"),
          ],
          'add' => NULL,
        ],
        'payment_plan_frequency' => [
          'name' => 'payment_plan_frequency',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Payment Plan Frequency'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_frequency',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Frequency"),
          ],
          'add' => NULL,
        ],
        'payment_plan_next_contribution_date' => [
          'name' => 'payment_plan_next_contribution_date',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => E::ts('Payment Plan Next Contribution Date'),
          'required' => TRUE,
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_next_contribution_date',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Next Contribution Date"),
          ],
          'add' => NULL,
        ],
        'payment_plan_start_date' => [
          'name' => 'payment_plan_start_date',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => E::ts('Payment Plan Start Date'),
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_start_date',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Start Date"),
          ],
          'add' => NULL,
        ],
        'payment_plan_create_date' => [
          'name' => 'payment_plan_create_date',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => E::ts('Payment Plan Create Date'),
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_create_date',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Create Date"),
          ],
          'add' => NULL,
        ],
        'payment_plan_cycle_day' => [
          'name' => 'payment_plan_cycle_day',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Payment Plan Cycle Day'),
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_cycle_day',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Cycle Day"),
          ],
          'add' => NULL,
        ],
        'payment_plan_auto_renew' => [
          'name' => 'payment_plan_auto_renew',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Payment Plan Auto Renew?'),
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_auto_renew',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Auto Renew?"),
          ],
          'add' => NULL,
        ],
        'payment_plan_financial_type' => [
          'name' => 'payment_plan_financial_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Payment Plan Financial Type'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_financial_type',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Financial Type"),
          ],
          'add' => NULL,
        ],
        'payment_plan_status' => [
          'name' => 'payment_plan_status',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Payment Plan Status'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_status',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Status"),
          ],
          'add' => NULL,
        ],
        'payment_plan_payment_method' => [
          'name' => 'payment_plan_payment_method',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Payment Plan Payment Method'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_payment_method',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Payment Method"),
          ],
          'add' => NULL,
        ],
        'payment_plan_is_active' => [
          'name' => 'payment_plan_is_active',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Payment Plan Is Active?'),
          'where' => 'membershipextrasimporter_fake_entity.payment_plan_is_active',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Payment Plan Is Active?"),
          ],
          'add' => NULL,
        ],
        'membership_external_id' => [
          'name' => 'membership_external_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Membership External Id'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.membership_external_id',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Membership External Id"),
          ],
          'add' => NULL,
        ],
        'membership_type' => [
          'name' => 'membership_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Membership Type'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.membership_type',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Membership Type"),
          ],
          'add' => NULL,
        ],
        'membership_join_date' => [
          'name' => 'membership_join_date',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => E::ts('Membership Join Date'),
          'where' => 'membershipextrasimporter_fake_entity.membership_join_date',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Membership Join Date"),
          ],
          'add' => NULL,
        ],
        'membership_start_date' => [
          'name' => 'membership_start_date',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => E::ts('Membership Start Date'),
          'where' => 'membershipextrasimporter_fake_entity.membership_start_date',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Membership Start Date"),
          ],
          'add' => NULL,
        ],
        'membership_end_date' => [
          'name' => 'membership_end_date',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => E::ts('Membership End Date'),
          'where' => 'membershipextrasimporter_fake_entity.membership_end_date',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Membership End Date"),
          ],
          'add' => NULL,
        ],
        'membership_status' => [
          'name' => 'membership_status',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Membership Status'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.membership_status',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Membership Status"),
          ],
          'add' => NULL,
        ],
        'membership_is_status_overridden' => [
          'name' => 'membership_is_status_overridden',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Membership Status Overridden?'),
          'where' => 'membershipextrasimporter_fake_entity.membership_is_status_overridden',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Membership Status Overridden?"),
          ],
          'add' => NULL,
        ],
        'membership_status_override_end_date' => [
          'name' => 'membership_status_override_end_date',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => E::ts('Membership Status Override End Date'),
          'where' => 'membershipextrasimporter_fake_entity.membership_status_override_end_date',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Membership Status Override End Date"),
          ],
          'add' => NULL,
        ],
        'contribution_external_id' => [
          'name' => 'contribution_external_id',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Contribution External Id'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.contribution_external_id',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Contribution External Id"),
          ],
          'add' => NULL,
        ],
        'contribution_financial_type' => [
          'name' => 'contribution_financial_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Contribution Financial Type'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.contribution_financial_type',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Contribution Financial Type"),
          ],
          'add' => NULL,
        ],
        'contribution_currency' => [
          'name' => 'contribution_currency',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Contribution Currency'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.contribution_currency',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Contribution Currency"),
          ],
          'add' => NULL,
        ],
        'contribution_payment_method' => [
          'name' => 'contribution_payment_method',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Contribution Payment Method'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.contribution_payment_method',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Contribution Payment Method"),
          ],
          'add' => NULL,
        ],
        'contribution_received_date' => [
          'name' => 'contribution_received_date',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => E::ts('Contribution Received Date'),
          'where' => 'membershipextrasimporter_fake_entity.contribution_received_date',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Contribution Received Date"),
          ],
          'add' => NULL,
        ],
        'contribution_status' => [
          'name' => 'contribution_status',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Contribution Status'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.contribution_status',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Contribution Status"),
          ],
          'add' => NULL,
        ],
        'contribution_invoice_number' => [
          'name' => 'contribution_invoice_number',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Contribution Invoice Number'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.contribution_invoice_number',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Contribution Invoice Number"),
          ],
          'add' => NULL,
        ],
        'line_item_entity_table' => [
          'name' => 'line_item_entity_table',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Order Line Entity Type'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.line_item_entity_table',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Order Line Entity Type"),
          ],
          'add' => NULL,
        ],
        'line_item_entity_id' => [
          'name' => 'line_item_entity_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Order Line Entity Id'),
          'where' => 'membershipextrasimporter_fake_entity.line_item_entity_id',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Order Line Entity Id"),
          ],
          'add' => NULL,
        ],
        'line_item_label' => [
          'name' => 'line_item_label',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Order Line Label'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.line_item_label',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Order Line Label"),
          ],
          'add' => NULL,
        ],
        'line_item_quantity' => [
          'name' => 'line_item_quantity',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Order Line Quantity'),
          'where' => 'membershipextrasimporter_fake_entity.line_item_quantity',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Order Line Quantity"),
          ],
          'add' => NULL,
        ],
        'line_item_unit_price' => [
          'name' => 'line_item_unit_price',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Order Line Unit Price'),
          'required' => TRUE,
          'precision' => [
            20,
            2,
          ],
          'where' => 'membershipextrasimporter_fake_entity.line_item_unit_price',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Order Line Unit Price"),
          ],
          'add' => NULL,
        ],
        'line_item_financial_type' => [
          'name' => 'line_item_financial_type',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Order Line Financial Type'),
          'required' => TRUE,
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.line_item_financial_type',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Order Line Financial Type"),
          ],
          'add' => NULL,
        ],
        'line_item_tax_amount' => [
          'name' => 'line_item_tax_amount',
          'type' => CRM_Utils_Type::T_MONEY,
          'title' => E::ts('Order Line Tax Amount'),
          'precision' => [
            20,
            2,
          ],
          'where' => 'membershipextrasimporter_fake_entity.line_item_tax_amount',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Order Line Tax Amount"),
          ],
          'add' => NULL,
        ],
        'line_item_auto_renew' => [
          'name' => 'line_item_auto_renew',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Order Line Auto Renew?'),
          'where' => 'membershipextrasimporter_fake_entity.line_item_auto_renew',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Order Line Auto Renew?"),
          ],
          'add' => NULL,
        ],
        'line_item_price_field_id' => [
          'name' => 'line_item_price_field_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Order Line Price Field Id'),
          'where' => 'membershipextrasimporter_fake_entity.line_item_price_field_id',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Order Line Price Field Id"),
          ],
          'add' => NULL,
        ],
        'line_item_price_field_value_id' => [
          'name' => 'line_item_price_field_value_id',
          'type' => CRM_Utils_Type::T_INT,
          'title' => E::ts('Order Line Price Field value Id'),
          'where' => 'membershipextrasimporter_fake_entity.line_item_price_field_value_id',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Order Line Price Field value Id"),
          ],
          'add' => NULL,
        ],
        'direct_debit_mandate_reference' => [
          'name' => 'direct_debit_mandate_reference',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Direct Debit Mandate Reference'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.direct_debit_mandate_reference',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Direct Debit Mandate Reference"),
          ],
          'add' => NULL,
        ],
        'direct_debit_mandate_bank_name' => [
          'name' => 'direct_debit_mandate_bank_name',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Direct Debit Mandate Bank Name'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.direct_debit_mandate_bank_name',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Direct Debit Mandate Bank Name"),
          ],
          'add' => NULL,
        ],
        'direct_debit_mandate_account_holder' => [
          'name' => 'direct_debit_mandate_account_holder',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Direct Debit Mandate Account Holder Name'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.direct_debit_mandate_account_holder',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Direct Debit Mandate Account Holder Name"),
          ],
          'add' => NULL,
        ],
        'direct_debit_mandate_account_number' => [
          'name' => 'direct_debit_mandate_account_number',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Direct Debit Mandate Account Number'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.direct_debit_mandate_account_number',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Direct Debit Mandate Account Number"),
          ],
          'add' => NULL,
        ],
        'direct_debit_mandate_sort_code' => [
          'name' => 'direct_debit_mandate_sort_code',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Direct Debit Mandate Sort Code'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.direct_debit_mandate_sort_code',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Direct Debit Mandate Sort Code"),
          ],
          'add' => NULL,
        ],
        'direct_debit_mandate_code' => [
          'name' => 'direct_debit_mandate_code',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Direct Debit Mandate Code'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.direct_debit_mandate_code',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Direct Debit Mandate Code"),
          ],
          'add' => NULL,
        ],
        'direct_debit_mandate_start_date' => [
          'name' => 'direct_debit_mandate_start_date',
          'type' => CRM_Utils_Type::T_DATE,
          'title' => E::ts('Direct Debit Mandate Start Date'),
          'where' => 'membershipextrasimporter_fake_entity.direct_debit_mandate_start_date',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Direct Debit Mandate Start Date"),
          ],
          'add' => NULL,
        ],
        'direct_debit_mandate_originator_number' => [
          'name' => 'direct_debit_mandate_originator_number',
          'type' => CRM_Utils_Type::T_STRING,
          'title' => E::ts('Direct Debit Mandate Originator Number'),
          'maxlength' => 255,
          'size' => CRM_Utils_Type::HUGE,
          'where' => 'membershipextrasimporter_fake_entity.direct_debit_mandate_originator_number',
          'table_name' => 'membershipextrasimporter_fake_entity',
          'entity' => 'MembershipextrasImporter',
          'bao' => 'CRM_Membershipextrasimporterapi_DAO_MembershipextrasImporter',
          'localizable' => 0,
          'html' => [
            'label' => E::ts("Direct Debit Mandate Originator Number"),
          ],
          'add' => NULL,
        ],
      ];
      CRM_Core_DAO_AllCoreTables::invoke(__CLASS__, 'fields_callback', Civi::$statics[__CLASS__]['fields']);
    }
    return Civi::$statics[__CLASS__]['fields'];
  }

  /**
   * Return a mapping from field-name to the corresponding key (as used in fields()).
   *
   * @return array
   *   Array(string $name => string $uniqueName).
   */
  public static function &fieldKeys() {
    if (!isset(Civi::$statics[__CLASS__]['fieldKeys'])) {
      Civi::$statics[__CLASS__]['fieldKeys'] = array_flip(CRM_Utils_Array::collect('name', self::fields()));
    }
    return Civi::$statics[__CLASS__]['fieldKeys'];
  }

  /**
   * Returns the names of this table
   *
   * @return string
   */
  public static function getTableName() {
    return self::$_tableName;
  }

  /**
   * Returns if this table needs to be logged
   *
   * @return bool
   */
  public function getLog() {
    return self::$_log;
  }

  /**
   * Returns the list of fields that can be imported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &import($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getImports(__CLASS__, 'ipextrasimporter_fake_entity', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of fields that can be exported
   *
   * @param bool $prefix
   *
   * @return array
   */
  public static function &export($prefix = FALSE) {
    $r = CRM_Core_DAO_AllCoreTables::getExports(__CLASS__, 'ipextrasimporter_fake_entity', $prefix, []);
    return $r;
  }

  /**
   * Returns the list of indices
   *
   * @param bool $localize
   *
   * @return array
   */
  public static function indices($localize = TRUE) {
    $indices = [];
    return ($localize && !empty($indices)) ? CRM_Core_DAO_AllCoreTables::multilingualize(__CLASS__, $indices) : $indices;
  }

}
